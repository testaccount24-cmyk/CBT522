         TITLE 'SMFWTM00 - WRITE USER DATA TO SMF'
SMFWTM00 CSECT ,
SMFWTM00 AMODE 31   24
SMFWTM00 RMODE 24
&RECTYPE SETA  251
         PRINT NOGEN
*---------------------------------------------------------------------*
*R0       EQU   0     PARAMETERS
*R1       EQU   1     PARAMETERS
*R2       EQU   2
*R3       EQU   3
*R4       EQU   4
*R5       EQU   5     POINTER TO SMF RECORD RDW
*R6       EQU   6     PASSED PARAMETER (LENGTH, THEN PARM TEXT)
*R7       EQU   7     PASSED PARAMETER POINTER
*R8       EQU   8     DATA INSERTION LOCATION
*R9       EQU   9
*R10      EQU   10
*R11      EQU   11
*R12      EQU   12   BASE REGISTER
*R13      EQU   13   SAVE AREA POINTER
*R14      EQU   14   RETURN POINT
*R15      EQU   15   ENTRY POINT, LINKAGE REGISTER, RETURN CODE
*---------------------------------------------------------------------*
*-------------------------------------------------------------------*/
*                                                                   */
*  REGISTER USAGE:                                                  */
*                                                                   */
*       R12 - BASE 1                                                */
*-------------------------------------------------------------------*/
                                                                EJECT
         USING SMFWTM00,R15
         SAVE  (14,12),,SMFWTM00
         B     IDXX
         DC    C'SMFWTM00'
VERSION  DC    CL8'V1.0.0 '
COMPDATE DC    CL8'&SYSDATC'
         DC    C' &SYSTIME'
         DC    C' '
         DS    0D
MAINSAVE DC    18F'0'
                                                                SPACE
IDXX     DS    0F
         DROP  R15
         LR    R12,R15                 SET MY BASE 1
         USING SMFWTM00,R12
                                                                SPACE
         LR    R4,R13                  PTR TO SAVEAREA
         LA    R13,MAINSAVE            MY AREA
         ST    R13,8(R4)               CHAIN IN
         ST    R4,4(R13)               CHAIN BACK
                                                                SPACE
         L     R7,0(R1)                PUT PARM IN SAFE REG
         SR    R6,R6                   CLEAR LENGTH REG
         LH    R6,0(R7)                GET LENGTH OF PARM
         LTR   R6,R6                   PARM ZERO?
         BZ    NOPARM                  YES, GO SET AND QUIT
*
* PARM STUFF GOES HERE - TWO BYTES OF LENGTH, THEN TEXT OF PARM
*
NOPARM   DS    0H
                                                                EJECT
         TIME  BIN
         ST    R0,BEGTIME
         ST    R1,BEGDATE
                                                                SPACE
         OPEN  (USERDATA,INPUT)
                                                                SPACE
         TM    USERDATA+DCBOFLGS-IHADCB,DCBOFOPN SUCCESSFUL OPEN
         BNO   BADOPEN
                                                                SPACE
         LH    R15,USERDATA+DCBLRECL-IHADCB PICK UP MAXIMUM RECORD LEN
                                                                SPACE
         C     R15,=AL4(32768-MJORXHLN)  TOO BIG TO FIT?
         BH    BADLRECL
                                                                SPACE
         GETMAIN R,LV=32768,LOC=BELOW
         LTR  R15,R15
         BNZ  BADGETM
                                                                SPACE
         LR   R5,R1          PICK UP ADDRESS OF STORAGE
         USING SMFWTMM1,R5
                                                                EJECT
         SMFRTEST RECTYPE=&RECTYPE,SUBTYPE=0
                                                                SPACE
         ST   R15,SMFRTEST   SAVE RETURNED VALUE
                                                                SPACE
         LTR  R15,R15
         BNZ  BADRTEST
                                                                EJECT
         MVC   MJORXSEG,=D'0'
                                                                SPACE
         MVI   MJORXFLG,X'D8'
         MVI   MJORXRTY,&RECTYPE
                                                                SPACE
         L     R9,CVTPTR             POINT TO CVT
         L     R9,CVTSMCA-CVT(0,R9)  POINT TO SMCA
         LTR   R9,R9
         BNM   NOTACTIVE
         MVC   MJORXSID,SMCASID-SMCABASE(R9) INSERT SMF ID
                                                                SPACE
         MVC   MJORXSSI,=C'MJO1'
         MVC   MJORXSTY,=H'1'
                                                                SPACE
         MVC   MJORXNT,=H'4'
         MVC   MJORXNT+2(2),=D'0'  ZERO OUT RESERVED BYTES
                                                                SPACE
         MVC   MJORXPOF,=AL4(MJORXPSS-SMFWTMM1)
         MVC   MJORXPLN,=AL2(MJORXPSL)
         MVC   MJORXPON,=H'1'      ONLY ONE PRODUCT SECTION
                                                                SPACE
         MVC   MJORXSOF,=D'0'      NO EXECUTION STATISTICS
         MVC   MJORXSLN,=D'0'      NO EXECUTION STATISTICS
         MVC   MJORXSON,=D'0'      NO EXECUTION STATISTICS
                                                                SPACE
         MVC   MJORXIOF,=AL4(MJORXID-SMFWTMM1)
         MVC   MJORXILN,=AL2(MJORXIDL)
         MVC   MJORXION,=H'1'      ONLY ONE TASK IDENTIFICATION SECTION
                                                                SPACE
         MVC   MJORXDON,=D'0'      NO DATA SECTIONS INSERTED YET
*        MVC   MJORXDLN,=D'0'      DEFAULT IS VARIABLE LENGTH SECTIONS
*        TM    USERDATA+DCBRECFM-IHADCB,DCBRECF FIXED LENGTH RECORDS?
*        BNO   NOTF
*        MVC   MJORXDLN,USERDATA+DCBLRECL-IHADCB INSERT FIXED REC LEN
*OTF     EQU   *
                                                                EJECT
         MVC   MJORXRVN,VERSION
         MVC   MJORXRVD,COMPDATE
         MVC   MJORXPNM,=C'MJOURECS'
                                                                SPACE
         L     R9,CVTPTR                  POINT TO CVT
         MVC   MJORXSYN,CVTSNAME-CVT(R9)  INSERT SYSNAME
                                                                SPACE
         L     R9,CVTECVT-CVT(0,R9)       POINT TO ECVT
         MVC   MJORXOWN,ECVTPOWN-ECVT(R9) PRODUCT OWNER
         MVC   MJORXNAM,ECVTPNAM-ECVT(R9) PRODUCT NAME
         MVC   MJORXVER,ECVTPVER-ECVT(R9) PRODUCT VERSION
         MVC   MJORXREL,ECVTPREL-ECVT(R9) PRODUCT RELEASE
         MVC   MJORXMOD,ECVTPMOD-ECVT(R9) PRODUCT MODIFICATION LEVEL
         MVC   MJORXSEQ,ECVTPSEQ-ECVT(R9) PRODUCT SEQUENCE NUMBER
                                                                SPACE
         L     R9,ECVTIPA-ECVT(0,R9)      POINT TO IPA
         MVC   MJORXSYP,IPASXNAM-IPA(R9)  INSERT SYSPLEX NAME
                                                                SPACE
         L     R9,PSAAOLD-PSA        POINT TO CURRENT ASCB
         CLC   ASCBJBNI-ASCB(4,R9),=D'0'  EMPTY
         BE    TSO
         L     R15,ASCBJBNI-ASCB(R9) POINT TO JOBNAME
         MVC   MJORXJBN,0(R15)       INSERT JOBNAME
                                                                SPACE
         CLC   MJORXJBN,=D'0'        ZERO?
         BNE   JOBDONE
                                                                SPACE
TSO      EQU   *
         CLC   ASCBJBNI-ASCB(4,R9),=D'0'  EMPTY
         BE    TSO
         L     R15,ASCBJBNS-ASCB(R9) POINT TO TASK NAME
         MVC   MJORXJBN,0(R15)       INSERT JOBNAME
                                                                SPACE
JOBDONE  EQU   *
                                                                SPACE
         L     R9,ASCBASSB-ASCB(R9) POINT TO SECONDARY BLOCK
         L     R9,ASSBJSAB-ASSB(R9) POINT TO JOB SCHEDULER ADDR SPC BLK
         MVC   JESJOBNO,JSABJBID-JSAB(R9)  INSERT JES JOB NUMBER
***      MVC   MJORXJBN,JSABJBNM-JSAB(R9) INSERT JOB NAME
                                                                EJECT
         IAZXJSAB READ,WORKID=WORKID,JOBID=JOBID,JOBNAME=JOBNAME,      +
               USERID=USERID,PREFIX=PREFIX,COMPID=COMPID,              +
               EXECST=EXECST,XCFGPNM=XCFGPNM,JESTAT=JESTAT,            +
               JSABLVL=JSABLVL
                                                                EJECT
         MVC   MJORXJNM,JOBID
***      MVC   MJORXUIF,USERID
                                                                SPACE
         L     R9,PSATOLD-PSA    POINT TO CURRENT TCB
         L     R9,TCBTCT-TCB(R9) POINT TO SMF TIMING CNTL TBL
         N     R9,=X'00FFFFFF'
         L     R9,TCTJMR-SMFTCT(0,R9) POINT TO JOB MANAGEMENT RECORD
***      MVC   MJORXJBN,JMRJOB-JMR(R9)
         MVC   MJORXRST(8),JMRENTRY-JMR(R9)
         MVC   STEPNUM,JMRSTEP-JMR(R9)   JMRSTEP IS ONE BYTE LONG
         MVC   MJORXUIF,JMRUSEID-JMR(R9)
                                                                SPACE
         L     R9,PSATOLD-PSA     POINT TO CURRENT TCB
         L     R9,TCBJSCB-TCB(R9) POINT TO JOBSTEP CNTL BLK
         N     R9,=X'00FFFFFF'
         XC    EPA,EPA            CLEAR WORK AREA
         MVC   EPA+SWVA-ZB505(3),JSCJCTP-IEZJSCB(R9) INSERT SVA
         LA    R15,EPA
         ST    R15,SWEPAPTR
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         LTR   R15,R15
         BNZ   BADSWARQ
         L     R9,EPA+SWBLKPTR-ZB505
                                                                SPACE
***      MVC   MJORXJBN,JCTJNAME-JCT(R9)
***      MVC   MJORXJNM,JCTJOBID-JCT(R9)
         MVC   MJORXRUD,JCTUSER-JCT(R9)  7 BYTE USERID FIELD
                                                                EJECT
         XC    EPA,EPA            CLEAR WORK AREA
         MVC   EPA+SWVA-ZB505(3),JCTACTAD-JCT(R9) INSERT SVA
         LA    R15,EPA
         ST    R15,SWEPAPTR
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         LTR   R15,R15
         BNZ   BADSWARQ
         L     R9,EPA+SWBLKPTR-ZB505
                                                                SPACE
         MVC   MJORXUSR,ACTPRGNM-IEFAACTB(R9)
                                                                EJECT
         L     R9,PSATOLD-PSA     POINT TO CURRENT TCB
         L     R9,TCBJSCB-TCB(R9) POINT TO JOBSTEP CNTL BLK
         N     R9,=X'00FFFFFF'
         XC    EPA,EPA            CLEAR WORK AREA
         MVC   EPA+SWVA-ZB505(3),JSCSCTP-IEZJSCB(R9) INSERT SVA
         LA    R15,EPA
         ST    R15,SWEPAPTR
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         LTR   R15,R15
         BNZ   BADSWARQ
         L     R9,EPA+SWBLKPTR-ZB505
                                                                SPACE
         MVI   MJORXSTN,0
         MVC   MJORXSTN+1(1),SCTSNUMB-SCT(R9)
         MVC   MJORXSTM,SCTSCLPC-SCT(R9)     STEPNAME
         MVC   MJORXPSN,SCTSNAME-SCT(R9)     PROCSTEP
                                                                SPACE
         L     R9,PSATOLD-PSA      POINT TO CURRENT TCB
         L     R9,TCBTIO-TCB(0,R9) POINT TO TASK I/O TABLE
***      MVC   MJORXSTM,TIOCJSTN-TIOT1(R9)   STEPNAME
***      MVC   MJORXPSN,TIOCPSTN-TIOT1(R9)   PROCSTEP
                                                                EJECT
         LA    R8,MJORXDAT             POINT TO SOURCE LOCATION
         SLR   R9,R9                   SET LENGTH OF ZERO AND ZERO FILL
         LA    R8,=XL4'FF000000'
         L     R9,=XL4'FF000000'
         LA    R10,MJORXDAT            POINT TO TARGET LOCATION
         L     R11,=AL4(32768-MJORXHLN) SET TARGET LENGTH
         MVCL  R10,R8
                                                                SPACE
         LA    R8,MJORXDAT             POINT TO SOURCE LOCATION
         MVC   MJORXDOF,=AL4(MJORXDAT-SMFWTMM1)
                                                                SPACE
         MODESET  KEY=ZERO,MODE=SUP
                                                                EJECT
LOOP     EQU   *
         GET   USERDATA
         LR    R4,R1       SAVE POINTER TO RECORD
                                                                SPACE
         L     R15,INPUT      HOW MANY ALREADY DONE?
         LA    R15,1(0,R15)
         ST    R15,INPUT      SAVE FOR NEXT  PASS
         C     R15,LIMIT      HOW'S THAT COMPARE TO THE MAXIMUM?
         BH    TOOMANY        OOPS, SORRY
                                                                SPACE
         BAL   R14,VALIDATE   SEE IS THIS REORD IS REGISTERED
                                                                SPACE
         CLC   MJORXDLN,USERDATA+DCBLRECL-IHADCB   SAME AS LAST?
         BE    INSERT
         CLC   MJORXDON,=D'0'      NO DATA SECTIONS INSERTED YET?
         BE    INS1ST              INSERT FIRST DATA SECTION.
                                                                SPACE
         BAL   R14,SMFWTM       WRITE LAST DUE TO CHANGE IN SEGMENT LEN
                                                                SPACE
INSERT   EQU  *
         LR   R14,R8          PICK UP INSERT LOCATION
         SR   R14,R5          COMPUTE BYTES DONE (LESS RECORD ORIGIN)
         SLR  R15,R15
         ICM  R15,B'0011',USERDATA+DCBLRECL-IHADCB INSERT INPUT LENGTH
         AR   R14,R15         COMPUTE BYTES DONE AFTER INSERT
                                                                SPACE
         C    R14,=F'32767'   HOW ARE WE AGAINST MAX SMF REC LEN?
         BL   INS1ST
                                                                SPACE
         BAL  R14,SMFWTM      WE'D HAVE EXCEEDED RECORD LENGTH
                                                                SPACE
INS1ST   EQU  *
         SLR  R15,R15
         ICM  R15,B'0011',USERDATA+DCBLRECL-IHADCB INSERT INPUT LENGTH
         STCM R15,B'0011',MJORXDLN                 STORE  INPUT LENGTH
         LR   R9,R15                               SAME OUTPUT LENGTH
         LR   R14,R4                               SET INPUT LOCATION
         MVCL R8,R14               INSERT DATA INTO RECORD
                                                                SPACE
         L    R15,OUTPUT           PICK UP COUNT OF INSERTED SEGMENTS
         LA   R15,1(0,R15)
         ST   R15,OUTPUT           SAVE UP COUNT OF INSERTED SEGMENTS
                                                                SPACE
         SLR  R15,R15
         ICM  R15,B'0011',MJORXDON        INSERT SEGMENT COUNT
         LA   R15,1(0,R15)                INCREMENT BY ONE
         STCM R15,B'0011',MJORXDON        SAVE FOR NEXT TIME
                                                                SPACE
         B    LOOP                 AND RETURN FOR ANOTHER SECTION
                                                                EJECT
TOOMANY  EQU  *
         WTO   'RECORD LIMIT REACHED, TERMINATING RUN'
         OI    FLAGS,MJORXTOO   SHOW LIMIT WAS REACHED
TOOMANYG GET   USERDATA
         LA    R15,1(0,R15)
         ST    R15,INPUT      SAVE FOR NEXT  PASS
         B     TOOMANYG       RUN OUT INPUT DATA, COUNTING RECORDS
                                                                EJECT
*        LR   R4,R15
                                                                SPACE
*        CVD   R4,DOUBWORD
                                                              SPACE 1
*        MVC   WTMWTOL+28(4),RCPAT
                                                              SPACE 1
*        ED    WTMWTOL+28(4),DOUBWORD+6
                                                                SPACE
*        MVI   WTMWTOL+28,C' '
                                                                SPACE
**       CVD   R9,DOUBWORD
                                                              SPACE 1
*        MVC   WTMWTOL+14(4),NUMPAT
                                                              SPACE 1
*        ED    WTMWTOL+14(4),DOUBWORD+6
                                                                SPACE
*        MVI   WTMWTOL+14,C' '
                                                              SPACE 1
****     WTO   MF=(E,WTMWTOL)
                                                              SPACE 3
*********************************************************************
EODAD    CLOSE (USERDATA,)
                                                              SPACE 1
         CLC   MJORXDON,=D'0'    ANY DATA SEGMENTS TO WRITE?
         BNE   STATWRIT
                                                              SPACE 1
         BAL   R14,SMFWTM
                                                              SPACE 1
STATWRIT TIME  BIN
         ST    R0,ENDTIME
         ST    R1,ENDDATE
                                                              SPACE 1
         MVC   MJORXSTY,=AL2(2)
         MVC   MJORXDOF,=D'0'      NO DATA SECTIONS
                                                              SPACE 1
         ST    R8,MJORXSOF
         MVC   0(MJORXSTL,R8),BEGTIME   INSERT STATISTICS SECTION
         LA    R8,MJORXSTL(0,R8)        POINT PAST DATA
         MVC   MJORXSLN,=AL2(MJORXSTL)
         MVC   MJORXSON,=AL2(1)
                                                              SPACE 1
         BAL   R14,SMFWTM
                                                              SPACE 1
DONE     DS    0D
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         TITLE 'SMFWTM00 - WRITE SMF RECORD'
SMFWTMRE DC    D'0'
                                                              SPACE 3
SMFWTM   EQU   *
         ST    R14,SMFWTMRE
                                                                SPACE
         LR    R15,R8              PICK UP INSERTION POINT
         SR    R15,R5              LESS ORIGIN OF RECORD GIVES LENGTH
         STH   R15,MJORXLEN        SET LENGTH OF RECORD
                                                              SPACE 3
         STIMER WAIT,DINTVL=DINTVL  LET'S NOT OVERWHELM SMF
                                                                SPACE
         TIME  BIN
         STCM  R0,B'1111',MJORXTME
         STCM  R1,B'1111',MJORXDTE
                                                                SPACE
*BNDS0C1 DC    H'0' FORCE S0C1 ABEND
         SMFWTM (R5)
                                                                SPACE
         LTR  R15,R15
         BNZ  BADWTM
                                                                SPACE
         L    R15,SMF              PICK UP COUNT OF SMF RECORDS WRITTEN
         LA   R15,1(0,R15)
         ST   R15,SMF              SAVE UP COUNT OF SMF RECORDS WRITTEN
                                                                SPACE
         LA    R8,MJORXDAT             POINT TO SOURCE LOCATION
         SLR   R9,R9                   SET LENGTH OF ZERO AND ZERO FILL
         LA    R8,=XL4'FF000000'
         L     R9,=XL4'FF000000'
         LA    R10,MJORXDAT            POINT TO TARGET LOCATION
         L     R11,=AL4(32768-MJORXHLN) SET TARGET LENGTH
         MVCL  R10,R8
                                                                SPACE
         LA    R8,MJORXDAT             POINT TO SOURCE LOCATION
         MVC   MJORXDOF,=AL4(MJORXDAT-SMFWTMM1)
         MVC   MJORXDON,=D'0'      NO DATA SECTIONS INSERTED YET
                                                              SPACE 3
         L     R14,SMFWTMRE
         BR    R14
         TITLE 'SMFWTM00 - VALIDATE RECORD REGISTERED WITH SYSTEM'
         DS    0D
VALIDATE ST    R14,VALIDRET
                                                                SPACE
         LR    R14,R4            POINT TO RECORD
                                                                SPACE
         TM    USERDATA+DCBRECFM-IHADCB,DCBRECF FIXED LENGTH RECORDS?
         BO    NOTFIXED
                                                                SPACE
         LA    R14,4(0,R14)      POINT PAST RDW FOR RECFM=V RECORDS
NOTFIXED EQU   *
                                                                SPACE
         L     R15,LASTLOC       PICK UP LAST LOCATION IN TABLE
         C     R15,=D'0'         BEEN HERE BEFORE?
         BNE   SEARCH            NO, THEN CAN'T USE SIMPLE  CHECK
                                                                SPACE
         L     R15,=A(REGISTRY)
                                                                SPACE
SEARCH   CLC   0(16,R15),0(R14)  REGISTERED WITH US?
         BE    VALID
         CLC   0(08,R15),0(R14)  AT LEAST MODULE?
         BE    KNOWNMOD
                                                                SPACE
NEXTREG  LA    R15,16(0,R15)     POINT TO NEXT TABLE ENTRY
                                                                SPACE
         CLC   =X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',0(R15) END OF TBL?
         BNE   SEARCH
                                                                EJECT
         L    R15,INVALID          PICK UP COUNT OF INVALID SEGMENTS
         LA   R15,1(0,R15)
         ST   R15,INVALID          SAVE UP COUNT OF INVALID SEGMENTS
                                                                SPACE
         CLI   WARNED,C'Y'
         BE    VALIDONE
         MVI   WARNED,C'Y'
                                                                SPACE
         CLI   KNOWN,C'Y'
         BE    KNOWNWTO
                                                                SPACE
UNKWNWTO EQU   *
         MVC   UNKWNTXT+27(8),0(R14)
         MVC   UNKWNTXT+36(8),8(R14)
                                                                SPACE
         L     R14,=A(XLATETBL)
         TR    UNKWNTXT+27(17),0(R14)  ENSURE READIBLE
                                                                SPACE
         LA    R2,UNKWNMSG
         WTO   TEXT=((2)),ROUTCDE=(11),DESC=(7)
                                                                SPACE
         B     VALIDONE
                                                                SPACE 3
KNOWNWTO EQU   *
         MVC   KNOWNTXT+25(8),0(R14)
         MVC   KNOWNTXT+34(8),8(R14)
                                                                SPACE
         L     R14,=A(XLATETBL)
         TR    KNOWNTXT+25(17),0(R14)  ENSURE READIBLE
                                                                SPACE
         LA    R2,KNOWNMSG
         WTO   TEXT=((2)),ROUTCDE=(11),DESC=(7)
                                                                SPACE
         B     VALIDONE
                                                                SPACE 3
KNOWNMOD MVI   KNOWN,C'Y'
         B     NEXTREG
                                                                EJECT
VALID    ST    R15,LASTLOC  VALIDATED AND LOCATION SAVED FOR NEXT CHECK
                                                                SPACE
VALIDONE L     R14,VALIDRET
         BR    R14
                                                                SPACE
         DS    0D
VALIDRET DC    F'0'
LASTLOC  DC    F'0'
KNOWN    DC    C'N'
WARNED   DC    C'N'
         DS    0D
UNKWNMSG DC    AL2(L'UNKWNTXT)
*                          1         2         3         4         5
*                012345678901234567890123456789012345678901234567890
UNKWNTXT DC    C'RECORD(S) NOT REGISTERED - XXXXXXXX XXXXXXX'
         DS    0D
KNOWNMSG DC    AL2(L'KNOWNTXT)
*                          1         2         3         4         5
*                012345678901234567890123456789012345678901234567890
KNOWNTXT DC    C'VERSION NOT REGISTERED - XXXXXXXX XXXXXXX'
                                                                SPACE
                                                              SPACE 3
         TITLE 'SMFWTM00 - LITERAL POOL'
         DROP  R5
         LTORG
         TITLE 'SMFWTM00 - ERROR ROUTINES'
         PRINT NOGEN
BADRTEST DS    0D
         LR    R4,R15
         WTO   'SMFRTEST MACRO FAILED (RECORD NOT BEING WRITTEN?)'
         ABEND 0005
                                                                SPACE
BADOPEN  DS    0D
         LR    R4,R15
         WTO   'UNABLE TO OPEN USERDATA FILE'
         ABEND 0006
                                                                SPACE
BADGETM  DS    0D
         LR    R4,R15
         WTO   'UNABLE TO OBTAIN WORKING STORAGE'
         ABEND 0007
                                                                SPACE
NOTACTIVE DS   0D
         LR    R4,R15
         WTO   'SMF IS NOT ACTIVE IN THIS SYSTEM'
         ABEND 0008
                                                                SPACE
BADWTM    DS   0D
         LR    R4,R15
         WTO   'ERROR DURING SMF WRITE REQUEST'
         ABEND 0009
                                                                SPACE
BADLRECL DS    0D
         LR    R4,R15
         WTO   'RECORD LENGTH TOO LONG FOR SMF RECORD'
         ABEND 0010
                                                                SPACE
BADSWARQ DS    0D
         LR    R4,R15
         WTO   'SWAREQ FAILURE'
         ABEND 0011
         TITLE 'SMFWTM00 - WORKAREAS'
         DS    0D
         DC    CL8'SMFRTEST'
SMFRTEST DC    F'0'
         DS    0D
                                                              SPACE 2
DOUBWORD DC    D'0'
FULLWORD DC    F'0'
HALFWORD DC    H'0'
                                                              SPACE 2
BEGTIME  DC    F'0'   TIME PROCESSING BEGAN
BEGDATE  DC    F'0'   DATE PROCESSING BEGAN
ENDTIME  DC    F'0'   TIME PROCESSING ENDED
ENDDATE  DC    F'0'   DATE PROCESSING ENDED
INPUT    DC    F'0'   NUMBER OF USER RECORDS PROVIDED
INVALID  DC    F'0'   NUMBER OF INVALID/UNREGISTERED RECORDS PROVIDED
OUTPUT   DC    F'0'   NUMBER OF USER RECORDS WRITTEN
SMF      DC    F'0'   NUMBER OF SMF  RECORDS WRITTEN
LIMIT    DC    F'100' MAXIMUM RECORDS THAT CAN BE SENT TO SMF
FLAGS    DC  BL4'0'   PROCESSING FLAGS
                                                              SPACE 2
SNAPDUMP DCB   DDNAME=SNAPDUMP,                                        +
               DSORG=PS,RECFM=VBA,MACRF=(W),LRECL=125,BLKSIZE=882
SNAPCNT  DC     F'0'
SNAPLIST DC    4F'0'
         DS    0D
SNAPREGS DC   18F'0'
USERDATA DCB   DDNAME=USERDATA,BFTEK=A,DSORG=PS,MACRF=(GL),            +
               DCBE=USERDCBE,EODAD=EODAD
USERDCBE DCBE RMODE31=BUFF
         TITLE 'SMFWTM00 - SNAP DUMP STUFF'
                                                                SPACE
*        OPEN  (SNAPDUMP,OUTPUT)
*        ST    R5,SNAPLIST
*        ST    R8,SNAPLIST+4
*        ST    R12,SNAPLIST+8
*        MVI   SNAPLIST+8,X'00'
*        LA    R2,MJO1DATA
*        ST    R2,SNAPLIST+12
*        MVI   SNAPLIST+12,X'80'
*        STM   R0,R15,SNAPREGS
*        LA    R2,SNAPREGS
*        ST    R2,SNAPLIST
*        LA    R2,72(0,R2)
*        ST    R2,SNAPLIST+4
*        MVI   SNAPLIST+4,X'80'
*        L     R2,SNAPCNT
*        LA    R2,1(0,R2)
*        ST    R2,SNAPCNT
*        SNAP  DCB=SNAPDUMP,ID=(2),PDATA=(REGS)
*        SNAP  DCB=SNAPDUMP,ID=(2),LIST=SNAPLIST
*        SNAP  DCB=SNAPDUMP,ID=(2),LIST=SNAPLIST,PDATA=(REGS)
*        CLOSE (SNAPDUMP,)
         TITLE 'SMFWTM00 - CONSTANTS'
         DS    0D
         DC    CL8'DINTVL  '
*                   H H M M S S H
DINTVL   DC    XL8'00000000000010'
                                                              SPACE 2
NUMPAT   DS   0XL04
         DC    X'40'                   PAD CHARACTER
         DC    X'202020'
*                 N N N
                                                              SPACE 2
RCPAT    DS   0XL04
         DC    X'F1'                   PAD CHARACTER
         DC    X'202020'
*                 N N N
                                                              SPACE 2
JOBNAME  DC   D'0'
WORKID   DC   D'0'
JOBID    DC   D'0'
USERID   DC   D'0'
PREFIX   DC   D'0'
COMPID   DC   D'0'
EXECST   DC   D'0'
XCFGPNM  DC   D'0'
JESTAT   DC   D'0'
JSABLVL  DC   D'0'
JESJOBNO DC   D'0'
                                                              SPACE 2
STEPNUM  DC   F'0'
                                                              SPACE 2
         DS    0D
SWEPAPTR DS    F
         DS    0D
EPA      DC    CL(L'SWAEPAX)' '
         DS    0D
QMPA     DS    CL(QMPLEN)
         DS    0D
SWAPARMS SWAREQ MF=L
                                                              SPACE 2
MJO1LEN  DC    Y(MJO1DATA)
MJO1DATA EQU   *
         DROP  R12
         TITLE 'SMFWTM00 - READIBILITY TRANSLATE TABLE'
         PRINT DATA
XLATETBL CSECT
                                                              SPACE
 DC  CL256' ' PRESET ALL TO BLANKS
                                                              EJECT
 ORG XLATETBL+C'¢'
           DC C'¢.<(+|'
 ORG XLATETBL+C'&&'
           DC C'&&'
 ORG XLATETBL+C'!'
           DC C'!$*);¬'
 ORG XLATETBL+C'-'
           DC C'-/'
 ORG XLATETBL+C'¦'
           DC C'¦,%_>?'
 ORG XLATETBL+C'`'
           DC C'`:#@''="'
                                                              SPACE
 ORG XLATETBL+C'A'
           DC C'ABCDEFGHI'
 ORG XLATETBL+C'J'
           DC C'JKLMNOPQR'
 ORG XLATETBL+C'S'
           DC C'STUVWXYZ'
                                                              SPACE
 ORG XLATETBL+C'{'
           DC C'{ABCDEFGHI'
 ORG XLATETBL+C'}'
           DC C'}JKLMNOPQR'
                                                              SPACE
 ORG XLATETBL+C'~'
           DC C'~'
                                                              SPACE
 ORG XLATETBL+C'S'
           DC C'STUVWXYZ'
                                                              SPACE
 ORG XLATETBL+C'\'
           DC C'\'
                                                              SPACE
 ORG XLATETBL+C'0'
           DC C'0123456789'
                                                              SPACE
         TITLE 'SMFWTM00 - DATA AREA MAPPINGS'
REGISTRY CSECT
                                                              SPACE 2
 DC CL8'XYZ123AA',CL8'0.0.0.1'
                                                              SPACE 2
 DC X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' END OF TABLE
         PRINT NODATA
         TITLE 'SMFWTM00 - DATA AREA MAPPINGS'
         PRINT GEN
 SMFWTMM1
                                                                EJECT
         PUSH PRINT
         PRINT OFF
 IHAPSA  DSECT=YES,LIST=YES PREFIXED STORAGE AREA
                                                                EJECT
 CVT     DSECT=YES,LIST=YES COMMUNICATIONS VECTOR TABLE
                                                                EJECT
 IHAECVT DSECT=YES,LIST=YES COMMUNICATIONS VECTOR TABLE
                                                                EJECT
 IHAASCB DSECT=YES,LIST=YES ADDRESS SPACE CONTROL BLOCK
                                                                EJECT
 IKJTCB  DSECT=YES,LIST=YES TASK CONTROL BLOCK
                                                                EJECT
 IHASTCB LIST=YES  SECONDARY TASK CONTROL BLOCK (TCB)
                                                                EJECT
 IEZJSCB ,  JOB-STEP CONTROL BLOCK
                                                                EJECT
SCT      DSECT
 IEFASCTB , STEP CONTROL TABLE
                                                                EJECT
 IHAASSB LIST=YES  ADDRESS SPACE SECONDARY BLOCK
                                                                EJECT
 IEESMCA , SMF CONTROL TABLE
                                                                EJECT
 IEESMCX , SMF CONTROL TABLE EXTENSION
                                                                EJECT
 IHAIPA  DSECT=YES,LIST=YES  INITIALIZATION PARAMETER AREA
                                                                EJECT
TIOT     DSECT
         IEFTIOT1 , TASK I/O TABLE
                                                                EJECT
 IEFTCT   DSECT=YES  SMF TIMING CONTROL TABLE
                                                                EJECT
 IEFJMR   , JOB MANAGEMENT RECORD
                                                                EJECT
 IAZJSAB  DSECT=YES,LIST=YES JOB SCHEDULER ADDR SPACE CNTL BLOCK
                                                                EJECT
JCT       DSECT
          IEFAJCTB , OS/390 JOB CONTROL TABLE
                                                                EJECT
 $HASPEQU , EQUATES FOR JES2
                                                                EJECT
*$BUFFER  ,           HASP BUFFER
                                                                EJECT
*$JCT     ,            JES2 JOB CONTROL TABLE
                                                                EJECT
 IEFJESCT TYPE=DSECT,MNTBL=NO  JOB ENTRY SUBSYSTEM COMMUNICATION TABLE
                                                                EJECT
 IEFZB505 LOCEPAX=YES EPA MAPPING FOR LOCATE MODE SWA
                                                                EJECT
 IEFZB506 MOVEPAX=YES EPA MAPPING FOR MOVE MODE SWA MANAGER
                                                                EJECT
 IEFQMIDS , CONSTANTS FOR SWA BLOCK IDS
                                                                EJECT
 IEFQMNGR , SWA MANAGER PARAMETER AREA
QMPLEN   EQU    QMPCL-IOPARAMS+L'QMPCL
                                                                EJECT
         DCBD    DSORG=PS,DEVD=(DA,TA)
         POP  PRINT
                                                                EJECT
******** COPY SYSVARS
                                                                EJECT
SMFWTM00 CSECT
         DC    C' SMFWTM00 '
         END   SMFWTM00,(C'OUJESKY',0808,52301)
